package Parser;

import java.util.ArrayList;
import java.util.Scanner;
import java.util.Stack;
import java.awt.geom.Point2D;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.nio.file.Path;
import java.nio.file.Paths;

import a.Component;
import a.Gate;
import a.Signal;

public class FileRead {
	
	public static ArrayList<Component> readComponentTypes(){
		ArrayList<Component> gateTypes = new ArrayList<Component>();
		File gatesfolder = new File("./Gates/");
		Path currentRelativePath = Paths.get("");
		System.out.println(currentRelativePath.toAbsolutePath().toString());
		File[] gateList = gatesfolder.listFiles();
		for (File f : gateList){
			if(f.isFile()){
				gateTypes.add(readGate(f));
			}
		}
		return gateTypes;
	}
	
	private static Gate readGate(File f){
		Scanner s = null;
		try {
			s = new Scanner(new FileInputStream(f));
		} catch (FileNotFoundException e) {
		}
		String name = s.next();
		int inputNum = s.nextInt();
		int outputNum = s.nextInt();
		Double x = s.nextDouble();
		Double y = s.nextDouble();
		Point2D.Double dimensions = new Point2D.Double(x,y);
		Stack[] logic = new Stack[outputNum];
		String current;
		for (int i = 0; i< outputNum; i++){
			while((current = s.next()) != "end"){
				logic[i].push(current);
			}
		}
		Gate g = new Gate(name, 1, inputNum, outputNum, new Point2D.Double(0,0), dimensions, logic);
		
		s.close();
		return g;
	}
}
